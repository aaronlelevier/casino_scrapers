# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-23 23:09
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('setting', '0001_initial'),
        ('translation', '0001_initial'),
        ('tenant', '0001_initial'),
        ('person', '0001_initial'),
        ('auth', '0007_alter_validators_add_error_messages'),
        ('work_order', '0001_initial'),
        ('location', '0001_initial'),
        ('accounting', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='role',
            name='inv_wo_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='work_order.WorkOrderStatus'),
        ),
        migrations.AddField(
            model_name='role',
            name='location_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='location.LocationLevel'),
        ),
        migrations.AddField(
            model_name='role',
            name='settings',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Setting'),
        ),
        migrations.AddField(
            model_name='role',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='tenant.Tenant'),
        ),
        migrations.AddField(
            model_name='proxyrole',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='person.Role'),
        ),
        migrations.AddField(
            model_name='person',
            name='auth_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.Currency'),
        ),
        migrations.AddField(
            model_name='person',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='person',
            name='locale',
            field=models.ForeignKey(blank=True, help_text="If the Person has not 'Locale', the Accept-Language header will be used or the Site's system setting.", null=True, on_delete=django.db.models.deletion.CASCADE, to='translation.Locale'),
        ),
        migrations.AddField(
            model_name='person',
            name='locations',
            field=models.ManyToManyField(blank=True, related_name='people', to='location.Location'),
        ),
        migrations.AddField(
            model_name='person',
            name='next_approver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nextapprover', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='person',
            name='proxy_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coveringuser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='person',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='person.Role'),
        ),
        migrations.AddField(
            model_name='person',
            name='settings',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Setting'),
        ),
        migrations.AddField(
            model_name='person',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='person.PersonStatus'),
        ),
        migrations.AddField(
            model_name='person',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
